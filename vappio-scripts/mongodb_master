#!/usr/bin/env python
import os
import sys
import time

from twisted.python import reflect

##
# Just pull everything from policy
from igs.config_manage.policy import *

MONGO_DIR = '/opt/db/mongo'
LOCK_FILE = os.path.join(MONGO_DIR, 'mongod.lock')

def startup():
    dirExists(MONGO_DIR)
    if os.path.exists(LOCK_FILE):
        run('rm -f %s' % LOCK_FILE)
        run('mongod --dbpath=%s --logpath=/var/log/mongodb.log --repair > /dev/null 2>&1' % MONGO_DIR)
    run('mongod --dbpath=%s --logpath=/var/log/mongodb.log --fork > /dev/null 2>&1' % MONGO_DIR)
    
def shutdown():
    run('killall mongod')


if len(sys.argv) < 2:
    raise Exception('Must provide start|stop|restart')

if sys.argv[1] == 'start':
    startup()
elif sys.argv[1] == 'stop':
    shutdown()
elif sys.argv[1] == 'restart':
    shutdown()
    time.sleep(1)
    startup()
else:
    raise Exception('Unknown argument: ' + sys.argv[1])
