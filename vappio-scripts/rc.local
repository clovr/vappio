#!/bin/sh
# Ubuntu doesn't use /etc/rc.local
# https://help.ubuntu.com/community/RcLocalHowto

### BEGIN INIT INFO
# Provides:             rc.local
# Required-Start:       
# Required-Stop:        
# Default-Start:        2 3 4 5
# Default-Stop:         0 6
# Short-Description:    Locals tartup
### END INIT INFO


do_start() {
    # Import vappio config
    vappio_scripts=/opt/vappio-scripts
    source $vappio_scripts/vappio_config.sh
    echo -n "CloVR VM " > /etc/issue
    cat /opt/CLOVR-RELEASE >> /etc/issue
    echo "Running on Ubuntu Linux 9.04 \n \l" >> /etc/issue
    echo " " >> /etc/issue
    netcount=$(/sbin/ifconfig | grep -o "inet")
    if [[ $netcount > 1 ]]
    then
	echo "To use this appliance, please use a web browser" >> /etc/issue
	echo "from another system to navigate to " >> /etc/issue
	echo " " >> /etc/issue
	/sbin/ifconfig | grep "inet addr" | grep -v "127.0.0.1" | awk '{ print $2 }' | awk -F: '{ print "http://"$2"/" }' >> /etc/issue
	echo " " >> /etc/issue       
	#echo "To login and manage the appliance use" >> /etc/issue
	#echo "Username:  Admin" >> /etc/issue
	#echo "Password:  Password" >> /etc/issue
    else
	echo "This appliance does not have networking configured.  Please log in to configure networking" >> /etc/issue
    fi
    
    ##
    # Input a link to an external website to reference
    echo "For more information regarding this appliance, please visit" >> /etc/issue
    echo "http://clovr.sf.net" >> /etc/issue
    echo " " >> /etc/issue
    
    if [ -f "/var/nimbus-metadata-server-url" ]
    then
	vlog "vappio_cloud_type=NIMBUS"
	export vappio_cloud_type=NIMBUS
	echo "NIMBUS" > $vappio_runtime/cloud_type
	$vappio_scripts/nimbus/start_nimbus.sh
    else
    ##
    # If vmware-checkvm returns 1 we know we are not on VMware
	vmware-checkvm
	if [ $? = "0" ]
	then
        #In vmware
            vlog "vappio_cloud_type=vmware"
            export vappio_cloud_type=vmware
            $vappio_scripts/vmware/start_vmware.sh
            echo "VMware" > $vappio_runtime/cloud_type
	else
        # If this curl fails it means we are not on EC2 (hopefully)
	    curl --connect-timeout 30 --retry 3 --silent --show-error --fail http://169.254.169.254/latest/meta-data/ > /dev/null
	    if [ $? = "0" ]
	    then
		vlog "vappio_cloud_type=EC2"
		export vappio_cloud_type=EC2
		$vappio_scripts/amazonec2/start_ec2.sh
		echo "EC2" > $vappio_runtime/cloud_type
		$vappio_scripts/create_swap_file.sh
            else
		vlog "vappio_cloud_type=XEN"
		export vappio_cloud_type=XEN
		echo "XEN" > $vappio_runtime/cloud_type
            fi
	fi
    fi

    #This needs to move till after ganglia is configured
    #vappio_node_type=`cat $vappio_runtime/node_type`
    #vappio_cloud_type=`cat $vappio_runtime/cloud_type`
    #gmetric -n NODE_TYPE -v "$vappio_node_type" -t string -c /usr/local/stow/ganglia/etc/gmond.conf
    #gmetric -n CLOUD_TYPE -v "$vappio_cloud_type" -t string -c /usr/local/stow/ganglia/etc/gmond.conf
    
    #Set up hostname if we don't have one
    #This is required so that SGE can run locally without problems
    hostname -f
    if [ $? != "0" ]
    then
	ipaddr=`/sbin/ifconfig | grep "inet addr" | grep -v "127.0.0.1" | awk '{ print $2 }' | awk -F: '{ print ""$2"" }'`
	hostname clovr-$ipaddr
	echo "$ipaddr clovr-$ipaddr clovr-$ipaddr" >> /etc/hosts
	touch $vappio_runtime/no_dns
    fi
}

do_stop() {
    ##
    # Delete this if we are a nimbus node, won't exist if we aren't
    rm /var/nimbus-metadata-server-url

    ##
    # Remove any subversions tuff
    rm -rf /root/.svn
    rm -rf /root/.subversion

    ##
    # Don't want people having our SSH keys
    rm -f /root/.ssh/authorized_keys

    ##
    # Logs just take up space and are not helpful
    rm -f /var/log/*.log
    rm -f /var/log/*.gz
    rm -f /var/log/dmesg.*
    rm -f /var/log/apache2/*
    rm -f /var/log/lastlog

    ##
    # Remove ergatis logs
    rm -rf /opt/ergatis/global_id_repository/logs/*

    #Recover a naked hosts file
    cp /etc/hosts.orig /etc/hosts
    cp /etc/udev/rules.d/70-persistent-net.rules.orig /etc/udev/rules.d/70-persistent-net.rules
}

case "$1" in
    start)
	do_start
	;;
    stop)
	do_stop
	;;
    *)
	echo $"Usage: $0 {start|stop}"
	exit 1
esac

exit $?
