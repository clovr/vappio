#!/bin/bash

# usage: epilog sge_id hostname job_owner queue
# Jobs submitted by the htcservice must have $htc_id defined in environment 
# if $htc_id isn't defined ignore job

#epilog                sgeworker@/home/sgeworker/production/server/bin/epilog 
#                     $host $job_owner $job_id $job_name $queue
array_job() {
    local RV=1
    if [ "$SGE_TASK_ID" = "undefined" ]; then
        RV=0
    fi
    return $RV
}

print_eventinfo () {
    # If the environment variable SGE_TASK_ID is defined then it
    # is an array job, so print the task id 
    if [ "$ARRAY" = "0" ]; then
	header="${htc_id}~~~${sge_id}~~~${start_date}~~~x~~~x~~~x"
    else
	header="${htc_id}~~~${sge_id}.${SGE_TASK_ID}~~~${start_date}~~~x~~~x~~~x"
    fi
    message="job finished on $queue for $job_owner";

    echo "I~~~epilog starting~~~x~~~x~~~x~~~x";
    echo "I~~~htc id~~~sge id[.task id]~~~date~~~message~~~hostname"
    #Consider removing because of bug interpreting T lines. Null pointer exception thrown in line 1332 in SGERunner.java
    #echo "T~~~${header}~~~$message~~~$hostname~~~x~~~x"
    echo "I~~~epilog ending~~~x~~~x~~~x~~~x";
}

start_date=`date`;
hostname=$1
job_owner=$2
sge_id=$3
job_name=$4
queue=$5

##
##Import vappio config
export vappio_root=/opt/vappio-scripts
vappio_scripts=$vappio_root
source $vappio_scripts/vappio_config.sh

# Determine if this is an array job
array_job
ARRAY=$?

if [ -n "$request_cwd" ]; then
    if [ "$ARRAY" = "0" ]; then
        # The job is *NOT* an array job
        EVENT_LOG="${request_cwd}/event.log"
    else
        # The job *IS* an array job
        EVENT_LOG="${request_cwd}/event.log.$SGE_TASK_ID"
    fi

    if [ -w "$EVENT_LOG" ] && [ -n "$htc_id" ]; then
        print_eventinfo >> "$EVENT_LOG" 2>&1
    fi
    if [ -n "$vappio_data_placement" ]; then
	$vappio_scripts/sge/vappio_epilog.sh $hostname $request_cwd $command_str "$command_args" 
	ret1=$?
	vlog "vappio_epilog return code: $ret1"
	if [ $ret1 -ne 0 ] 
	    then
	    echo "I~~~vappio harvesting failure. See logs~~~x~~~x~~~x~~~x" >> $EVENT_LOG;
	    exit $ret1
	fi 
    fi
fi > /dev/null 2>&1

exit 0
