#!/bin/bash

#Launch a VM in headless mode and return the IP address
USAGE="vp-launch-headless [vm_bundle_directory] [vmware|vbox]"
#

if [ -d "$1" ] && [ -f $1/start_clovr.vmx ]
then
    echo "Starting VM in $1" >&2
else
    echo $USAGE
    exit 1
fi

ipstat=`stat -t $1/shared/clovr_ip 2> /dev/null`

if [ "$2" = "vbox" ]
then
    bname=`basename $1`
    VBoxManage showvminfo $bname
    if [ $? = 1 ]
    then
	VBoxManage import $1/$bname.ovf
    fi
	#Update networking
    VBoxManage modifyvm $bname --bridgeadapter1 eth0
    VBoxManage sharedfolder remove $bname --name shared || true
    VBoxManage sharedfolder remove $bname --name keys || true
    VBoxManage sharedfolder remove $bname --name user_data || true
    VBoxManage sharedfolder remove $bname --name pg_data || true
    VBoxManage sharedfolder add $bname --name shared --hostpath $1/shared/ 
    VBoxManage sharedfolder add $bname --name keys --hostpath $1/keys/ 
    VBoxManage sharedfolder add $bname --name user_data --hostpath $1/user_data/
    VBoxManage sharedfolder add $bname --name pg_data --hostpath $1/pg_data/
	#Update shared folders
    VBoxHeadless -s $bname
else
    if [ -d "$1/start_clovr.vmx.lck" ]
    then
	echo "VM $buildvm is already running" >&2
	exit 1
    else
	xhost + > /dev/null 2>/dev/null
	xhost +LOCAL: > /dev/null 2>/dev/null
	export DISPLAY=:0.0
	vmplayer $1/start_clovr.vmx > /dev/null 2>/dev/null &
    fi
fi
echo "Waiting for VM to start" >&2
ipstatnew=`stat -t $1/shared/clovr_ip 2> /dev/null`
timeout=60 #5 minutes
count=1
while [ "$ipstat" = "$ipstatnew" ]
do
    echo -n "." >&2
    ipstatnew=`stat -t $1/shared/clovr_ip 2> /dev/null`
    sleep 5
    count=`expr $count + 1`
    if [ $count -gt $timeout ]
    then
	echo "Machine boot not detected, exiting" >&2
	exit 1;
    fi
done

echo >&2
cat $1/shared/clovr_ip
exit