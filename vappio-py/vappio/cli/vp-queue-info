#!/usr/bin/env python
import sys

from twisted.internet import reactor
from twisted.internet import defer

from twisted.python import log

from igs.utils import config
from igs.utils import functional as func
from igs.utils import cli

from igs_tx.utils import defer_utils

from vappio_tx.mq import client


OPTIONS = [
    ('vappio_apps_config',
     '',
     '--config',
     'Path to vappio apps config, defaults to /opt/vappio-apps/vappio_apps.conf',
     cli.defaultIfNone('/opt/vappio-apps/vappio_apps.conf')),
    ('dump_file', '', '--dump', 'File to do a full dump to', cli.defaultIfNone(None)),
    ('queue_file', '', '--output', 'File to dump to queue information', cli.defaultIfNone(None)),
    ('gc_file', '', '--gc-output', 'File to dump gc information to (off by default)', cli.defaultIfNone(None)),
    ('gc_verbose',
     '',
     '--gc-verbose',
     'Value to set gc verbosity to (see http://caml.inria.fr/pub/docs/manual-ocaml/libref/Gc.html)',
     func.compose(lambda x : int(x, 16), cli.defaultIfNone('-1'))),
    ('gc_max_overhead',
     '',
     '--gc-max-overhead',
     'Set max-overhead',
     func.compose(int, cli.defaultIfNone('0'))),
    ('gc_space_overhead',
     '',
     '--gc-space-overhead',
     'Set space-overhead',
     func.compose(int, cli.defaultIfNone('0'))),
    ('toggle_debug', '', '--toggle-debug', 'Toggle debug on and off', cli.defaultIfNone(False), cli.BINARY)
    ]


@defer.inlineCallbacks
def _getInfo(options, conf):
    mq = client.connect(conf)
    if options('general.dump_file'):
        mq.send('/control/dump-report', options('general.dump_file'))
    if options('general.queue_file'):
        mq.send('/control/all-messages', options('general.queue_file'))
    if options('general.gc_file'):
        mq.send('/control/gc-information', options('general.gc_file'))
    if options('general.gc_verbose') != -1:
        mq.send('/control/gc-verbose', str(options('general.gc_verbose')))
    if options('general.gc_max_overhead') != 0:
        mq.send('/control/gc-max-overhead', str(options('general.gc_max_overhead')))
    if options('general.gc_space_overhead') != 0:
        mq.send('/control/gc-space-overhead', str(options('general.gc_space_overhead')))
    if options('general.toggle_debug'):
        mq.send('/control/toggle-debug', '')
    yield defer_utils.sleep(3)()
    reactor.stop()
    
def main(options, _args):
    log.startLogging(sys.stdout)
    
    conf = config.configFromStream(open(options('general.vappio_apps_config')))

    reactor.callLater(0.0, _getInfo, options, conf)
    reactor.run()


if __name__ == '__main__':
    main(*cli.buildConfigN(OPTIONS))
