#!/usr/bin/python
import sys

from igs.utils import cli
from igs.utils import commands

from vappio.tags import tag_validate

from vappio.webservice import tag

OPTIONS = [
    ('db_type', '', '--db_type', 'Type of db',
     cli.restrictValues(['blastn', 'tblastx', 'blastp', 'tblastn', 'blastx', None]))
    ]


def checkCompatibility(seqType, dbType):
    if dbType in ['blastn', 'tblastx', 'blastx'] and seqType != 'DNA':
        raise Exception('Sequence type must be nucleotide')
    elif dbType in ['blastp', 'tblastn'] and seqType != 'Protein':
        raise Exception('Sequence type must be protein')

def main(options, _args):
    if sys.stdin.readline().strip() != 'kv':
        raise Exception('Header needs to be kv')

    sys.stdout.write('kv\n')

    tags = []

    for line in sys.stdin:
        sys.stdout.write(line)
        k, v = line.strip().split('=', 1)
        if k.startswith('input.'):
            tags.append(v)

    tag_validate.tags_is_filetype(tags, 'fasta')
        
    tagsInfo = tag.listTags('localhost',
                            'local',
                            {'$or': [{'tag_name': t} for t in tags]},
                            True)

    if options('general.db_type'):
        for t in tagsInfo:
            for f in t['files']:
                stdout = []
                commands.runSingleProgramEx('seqstat ' + f,
                                            stdout.append,
                                            None)
                seqType = [l for l in stdout if l.startswith('Type')][0].split(':')[1].strip()
                checkCompatibility(seqType, options('general.db_type'))

if __name__ == '__main__':
    main(*cli.buildConfigN(OPTIONS))
