Ext.onReady(function() {
    Ext.QuickTips.init();
    
    var xg = Ext.grid;

    // shared reader
    var reader = new Ext.data.ArrayReader({}, [
       {name: 'publicip'},
       {name: 'privateip'},
       {name: 'type'},
       {name: 'queue'},
       {name: 'state'},
       {name: 'uptime'},
       {name: 'job'},
       {name: 'load'},
       {name: 'memory'},
    ]);
	Ext.v_maxnodes = 256;
	var counts = [ [1,'1'],[2,'2'],[3,'3'] ];
    var store = new Ext.data.SimpleStore({
		    fields: ['name', 'count'],
			data : counts 
  	});
	var typesdata = [ ['exec','exec'],['data','data'] ];
    var typesstore = new Ext.data.SimpleStore({
            fields: ['name', 'desc'],
            data : typesdata
    });
    Ext.v_datar = 1;
	Ext.v_execr = 1;
 	function launchDialog(scope, options){
	win = new Ext.Window({
                applyTo     : 'launch-win',
                layout      : 'fit',
                width       : 500,
                height      : 300,
                closeAction :'hide',
                plain       : true,
				items:  new Ext.FormPanel({
					        frame: true,
					        title:'Vappio launchpad',
					        labelWidth: 110,
					        width: 800,
					        renderTo:'launch-win',
					        bodyStyle: 'padding:0 10px 0;',
					        collapsible: true,
						    animCollapse: true,
					        items: [{layout: 'column',border: false,defaults: {columnWidth: '.5',border: false},
					            items: [{bodyStyle: 'padding-right:5px;',
					                items:{xtype:'fieldset',title: 'Modify grid V1',autoHeight: true,
					                    items: [new Ext.form.ComboBox({
					                        tpl: '<tpl for="."><div ext:qtip="{name}" class="x-combo-list-item">{name}</div></tpl>',
                    					    store: store,
					                        displayField:'image',
					                        typeAhead: true,
                    					    mode: 'local',
					                        triggerAction: 'all',
                    					    emptyText:'Number of nodes',
					                        selectOnFocus:true
											}),
                   							{
						                     xtype: 'radiogroup',
						                     fieldLabel: 'Node type',
    						                 itemCls: 'x-check-group-alt',
						                     columns: 2,
						                     vertical: true,
						                     items: [
                        					{boxLabel: 'Data', name: 'node-type', inputValue: 1},
					                        {boxLabel: 'Exec', name: 'node-type', inputValue: 2, checked: true},
					                        ]}
										]}}]}]	
                }),
				buttons: [{
                    text     : 'Submit',
                    disabled : true
                },{
                    text     : 'Close',
                    handler  : function(){
                        win.hide();
                    }
                }]
            });
	win.show();
        };
    var grid = new Ext.grid.EditorGridPanel({
        store: new Ext.data.GroupingStore({
            reader: reader,
            data: xg.dummyData2,
            sortInfo:{field: 'publicip', direction: "ASC"},
            groupField:'type'
        }),

        cm: new Ext.grid.ColumnModel([
            {id:'publicip',header: "Public IP", width: 60, sortable: true, dataIndex: 'publicip',
            editor: new Ext.form.TextField({
             allowBlank: false
            })},
            {header: "Private IP", width: 20, sortable: true, dataIndex: 'privateip',
			editor: new Ext.form.TextField({
			             allowBlank: false
            })},
            {header: "type", width: 20, sortable: true, dataIndex: 'type',
			editor: new Ext.form.ComboBox({
			  transform: types,
			  triggerAction: 'all',
			  lazyRender:true,
			  typeAhead: true,
              listClass: 'x-combo-list-small'
			})},
            {header: "queue", width: 20, sortable: true, dataIndex: 'queue'},
            {header: "state", width: 20, sortable: true, dataIndex: 'state'},
            {header: "uptime", width: 20, sortable: true, dataIndex: 'uptime'},
            {header: "job", width: 20, sortable: true, dataIndex: 'job'},
            {header: "load", width: 20, sortable: true, dataIndex: 'load'},
            {header: "memory", width: 20, sortable: true, dataIndex: 'memory'}
		]),
        view: new Ext.grid.GroupingView({
            forceFit:true,
            groupTextTpl: '{text} ({[values.rs.length]} {[values.rs.length > 1 ? "Types" : "Type"]})'
        }),
// inline buttons
//     buttons: [{text:'Save'},{text:'Cancel'}],
       buttonAlign:'center',
		// inline toolbars
        tbar:[{
			text:'Launch nodes ('+Ext.v_datar+' data,'+Ext.v_execr+' exec running)',
            tooltip:Ext.v_datar+' data,'+Ext.v_execr+' exec running',
            iconCls:'add',
			handler: launchDialog
        }, '-',
		],
        frame:true,
        width: 800,
        height: 450,
        collapsible: true,
        animCollapse: true,
        title: 'Vappio launchpad for Grid V1',
        iconCls: 'icon-grid',
        renderTo: 'gridstatus' 
    });
});

Ext.grid.dummyData2 = [
        ['<a href="1.1.1">1.1.1</a>','10.1.1.1','master','staging.q','idle',' ','0','0/0','2:21 hours'],
        ['1.1.1','10.1.1.1','master','staging.q','idle',' ','0','0/0','2:21 hours'],
        ['1.1.1','10.1.1.1','master','staging.q','idle',' ','0','0/0','2:21 hours'],
        ['1.1.1','10.1.1.1','master','staging.q','idle',' ','0','0/0','2:21 hours'],
        ['1.1.1','10.1.1.1','master','staging.q','idle',' ','0','0/0','2:21 hours'],
        ['1.1.1','10.1.1.1','master','staging.q','idle',' ','0','0/0','2:21 hours'],
];


